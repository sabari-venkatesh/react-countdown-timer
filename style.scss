@mixin spacing($offsets, $property: margin) {
  $len: length($offsets);
  $prop: ();

  @if ($len <=4) {
    @each $offset in $offsets {
      @if(type-of($offset) == number) {
        $prop: append($prop, $offset * $base-line-height + rem);
      } @else {
        $prop: append($prop, $offset);
      }
    }
  }

  #{$property}: $prop;
}

$base-font-size: 12px;
$base-line-height: 1.5;

html {
  font-size: $base-font-size;
  line-height: $base-line-height;
  box-sizing: border-box;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

*,
*:before,
*:after {
  box-sizing: inherit;
  margin: 0;
}

%flex-container {
  display: flex;
  align-items: center;
  justify-content: space-evenly;
}

.timer {
  border: 1px solid #222;
  @include spacing(15, width);
  @include spacing(2 auto, margin);
  @include spacing(1, padding);
  text-align: center;
  &__header {
    @extend %flex-container;
  }

  &__time {
    @extend %flex-container;
    font-size: 2rem;
  }

  &__button {
    display: inline-block;
    @include spacing(0.5 0.25 0, margin);
  }
}